name: Build and Release

on:
  push:
    branches: [ master, main ]
  pull_request:
    types: [ closed ]
    branches: [ master, main ]

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Playwright dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-xcb1 libxcb-dri3-0 libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6 libnss3 libcups2 libxss1 libxrandr2 libasound2 libpangocairo-1.0-0 libatk1.0-0 libatk-bridge2.0-0 libgtk-3-0

      - name: Calculate version
        id: version
        run: |
          VERSION=$(git describe --tags --always --dirty | sed 's/^v//')
          if [[ $VERSION == *-* ]]; then
            # If not a clean tag, add date and commit hash
            VERSION="${VERSION}-$(date +'%Y%m%d%H%M%S')"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Install dependencies
        run: go mod download

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o fuckingloader-windows-amd64.exe -ldflags "-s -w" .

      - name: Build for macOS (Intel)
        run: GOOS=darwin GOARCH=amd64 go build -o fuckingloader-darwin-amd64 -ldflags "-s -w" .

      - name: Build for macOS (Apple Silicon)
        run: GOOS=darwin GOARCH=arm64 go build -o fuckingloader-darwin-arm64 -ldflags "-s -w" .

      - name: Build for Linux (amd64)
        run: GOOS=linux GOARCH=amd64 go build -o fuckingloader-linux-amd64 -ldflags "-s -w" .

      - name: Build for Linux (arm64)
        run: GOOS=linux GOARCH=arm64 go build -o fuckingloader-linux-arm64 -ldflags "-s -w" .

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.version.outputs.VERSION }}
          tag_name: v${{ steps.version.outputs.VERSION }}
          files: |
            fuckingloader-windows-amd64.exe
            fuckingloader-darwin-amd64
            fuckingloader-darwin-arm64
            fuckingloader-linux-amd64
            fuckingloader-linux-arm64
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 